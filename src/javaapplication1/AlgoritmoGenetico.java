/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.BorderLayout;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class AlgoritmoGenetico extends javax.swing.JFrame {

    /**
     * Creates new form AlgoritmoGenetico
     */
   
    

    public AlgoritmoGenetico() {        
        initComponents();   
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        numeroDeIndividuostext = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        errorDeConvergencia = new javax.swing.JTextField();
        btnIniciar = new javax.swing.JButton();
        panel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Numero de Individuos");

        jLabel2.setText("Error De Convergencia");

        btnIniciar.setText("INICIAR");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        panel1.setBackground(new java.awt.Color(51, 51, 255));
        panel1.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(errorDeConvergencia, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(numeroDeIndividuostext, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(btnIniciar)))
                .addGap(33, 33, 33)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(498, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(numeroDeIndividuostext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(errorDeConvergencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(btnIniciar))
                    .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(216, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        ArrayList<Individuo> mustra = new ArrayList<>();
        int numeroDeIndividios = Integer.parseInt(numeroDeIndividuostext.getText());

        for (int i = 0; i < numeroDeIndividios; i++) {
            Individuo ind = new Individuo();
            ind.generarMatrizAleatoria();
            ind.generarMatrizBinaria();
            ind.generarVectorBinario();
            mustra.add(ind);
            // JOptionPane.showMessageDialog(null," individuo "+i);
        }
        
        //System.out.println(mustra.get(0).getMatriz()[0][0]);

        Sintoma sintoma = new Sintoma();
        Enfermedad enfermedad = new Enfermedad();
        Sigmoide sigmoide = new Sigmoide();
        Cruce cruce;
        double yc[] = new double[4];
        double error[] = new double[4];
        double errorPatron[] = new double[10];

        for (int p = 0; p < 10; p++) {            
            
            //estos son los patrones 
            int x[] = sintoma.getFila(p);
            int y[] = enfermedad.getFila(p);

            for (Individuo indi : mustra) {

                double R[][] = indi.getMatriz();
                double suma = 0;
                double sumaError = 0;

                for (int i = 0; i < 4; i++) {

                    for (int j = 0; j < 7; j++) {
                        double aux = x[j] * R[j][i];
                        suma += aux;
                    }
                    yc[i] = sigmoide.function(suma);

                    suma = 0;
                    error[i] = y[i] - yc[i];
                }

                for (int i = 0; i < error.length; i++) {
                    sumaError += Math.abs(error[i]);
                }
                indi.setErrorPatron(sumaError / 4);
            }
            
            //Ordenar de menor a mayor para obtener los mejores individuos para la reproduccion 
            Collections.sort(mustra, new Comparator<Individuo>() {
                @Override
                public int compare(Individuo p1, Individuo p2) {
                    // Aqui esta el truco, ahora comparamos p2 con p1 y no al reves como antes
                    return new Double(p2.getErrorPatron()).compareTo(new Double(p1.getErrorPatron()));
                }
            });

            errorPatron[p] = mustra.get(0).getErrorPatron();
            cruce = new Cruce(numeroDeIndividios, mustra);
            mustra = cruce.nuevaGenaracion();           
            //graficarErrorPatron(errorPatron);
            graficarErrorPatron(errorPatron);           

        }
    }//GEN-LAST:event_btnIniciarActionPerformed
    
    public void graficarErrorPatron(double[] errorPatron) {       
        
        //Fuentes de datos       

        DefaultCategoryDataset line_chart_dataset = new DefaultCategoryDataset();
        
        for (int i = 0; i < errorPatron.length; i++) {           
            
            line_chart_dataset.setValue(errorPatron[i], "Error", String.valueOf(i + 1));
        }

         // Creando el Grafico
        JFreeChart chart = ChartFactory.createLineChart("Errores por patron",
                "patrones","Errores",line_chart_dataset,PlotOrientation.VERTICAL,
                true,true,false);  
        
        // Mostrar Grafico
        ChartPanel chartPanel = new ChartPanel(chart);        
        panel1.removeAll();
        panel1.add(chartPanel,BorderLayout.CENTER);
        panel1.validate();
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlgoritmoGenetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlgoritmoGenetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlgoritmoGenetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlgoritmoGenetico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlgoritmoGenetico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciar;
    private javax.swing.JTextField errorDeConvergencia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField numeroDeIndividuostext;
    private javax.swing.JPanel panel1;
    // End of variables declaration//GEN-END:variables
}
